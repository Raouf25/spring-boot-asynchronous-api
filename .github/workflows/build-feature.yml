name: Code Quality Check Feature

on:
  # to fix comment : Runs on pull request targeting any branch except the default branch main
  pull_request:
    types: [ opened, synchronize, reopened]
  push:
    branches: [ feature/*, feat/*, fix/* ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  FLY_API_TOKEN: ${{ secrets.SPRING_BOOT_ASYNCHRONOUS_API_FLY_API_TOKEN }}

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true


jobs:
  analyze_code:
    name: Analyze Code Quality
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

        # Set up the Java Development Kit (JDK) version 19
      - name: Set up JDK 19
        uses: actions/setup-java@v1
        with:
          java-version: 19

      # Cache Sonar packages to speed up the build process
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Cache Maven packages to speed up the build process
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Build and analyze the code using Maven and SonarCloud
      - name: Analyze Code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Raouf25_spring-boot-asynchronous-api

  deploy:
    environment:
      name: dev-swagger-ui
      url: https://spring-boot-asynchronous-api.fly.dev/swagger-ui/index.html
    name: Deploy app
    needs: analyze_code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only

  non_regression_test:
    name: Non Regression Test
    environment:
      name: dev-karate-report
      url: ${{ steps.deployment.outputs.page_url }}karate-summary-${{ github.event.pull_request.number }}.html
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

        # Set up the Java Development Kit (JDK) version 19
      - name: Set up JDK 19
        uses: actions/setup-java@v1
        with:
          java-version: 19

      # Cache Maven packages to speed up the build process
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Non Regression Test
      - name: Non Regression Test
        continue-on-error: true
        run: |
          mvn clean test  --f ./nrt/pom.xml -PflyServer -Dapi.url='https://spring-boot-asynchronous-api.fly.dev' 

      # Create a "doc" directory and move karate reports to it
      - name: Get report
        run: |
          mkdir -p doc-${{ github.event.pull_request.number }}
          mv ./nrt/target/karate-reports/* ./doc-${{ github.event.pull_request.number }}
          folder_path="./doc-${{ github.event.pull_request.number }}"
          old_string="karate-summary.html"
          new_string="karate-summary-${{ github.event.pull_request.number }}.html"
          find "$folder_path" -type f -exec sed -i "s/$old_string/$new_string/g" {} \;
          mv ./doc-${{ github.event.pull_request.number }}/karate-summary.html ./doc-${{ github.event.pull_request.number }}/karate-summary-${{ github.event.pull_request.number }}.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './doc-${{ github.event.pull_request.number }}'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  build-docker-image:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: raouf25      # name of Docker Hub ID
      IMAGE_NAME: webapp
  ##    IMAGE_TAG: ${{ github.run_number }} # $GITHUB_RUN_NUMBER

    steps:

      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Build Docker Image
        run:
          docker build . --file Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@master
#        continue-on-error: true
#        with:
#          image-ref: 'docker.io/${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
#          format: 'table'
#          exit-code: '1'
#          ignore-unfixed: true
#          vuln-type: 'os,library'
#          severity: 'MEDIUM,HIGH,CRITICAL'
#
#      - name: Login to Docker Hub
#        run: |
#          echo "${{ secrets.DOCKER_REPOSITORY_PASSWORD }}" | docker login -u $DOCKER_REPOSITORY --password-stdin
#
#      - name: Push Image to Docker Hub
#        run:
#          docker push $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER
