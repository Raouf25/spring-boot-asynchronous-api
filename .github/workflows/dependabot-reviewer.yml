name: Dependabot reviewer

on: pull_request_target

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FLY_API_TOKEN: ${{ secrets.DEPENDABOT_SPRING_BOOT_ASYNCHRONOUS_API_FLY_API_TOKEN }}

permissions:
  pull-requests: write
  contents: write

jobs:
  analyze_code:
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    name: Analyze Code Quality
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

        # Set up the Java Development Kit (JDK) version 19
      - name: Set up JDK 19
        uses: actions/setup-java@v1
        with:
          java-version: 19

      # Cache Sonar packages to speed up the build process
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Cache Maven packages to speed up the build process
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Build and analyze the code using Maven and SonarCloud
      - name: Analyze Code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.DEPENDABOT_SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Raouf25_spring-boot-asynchronous-api

  deploy:
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    environment:
      name: dev-environment
      url: https://spring-boot-asynchronous-api.fly.dev/api/v1/players/all
    name: Deploy app
    needs: analyze_code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only

  non_regression_test:
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    name: Non Regression Test
    environment:
      name: dev-karate-report
      url: ${{ steps.deployment.outputs.page_url }}karate-summary-${{ github.event.pull_request.number }}.html
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

        # Set up the Java Development Kit (JDK) version 19
      - name: Set up JDK 19
        uses: actions/setup-java@v1
        with:
          java-version: 19

      # Cache Maven packages to speed up the build process
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Non Regression Test
      - name: Non Regression Test
        continue-on-error: true
        run: |
          mvn clean test  --f ./nrt/pom.xml -PflyServer -Dapi.url='https://spring-boot-asynchronous-api.fly.dev' 

      # Create a "doc" directory and move karate reports to it
      - name: Get report
        run: |
          mkdir -p doc-${{ github.event.pull_request.number }}
          mv ./nrt/target/karate-reports/* ./doc-${{ github.event.pull_request.number }}
          folder_path="./doc-${{ github.event.pull_request.number }}"
          old_string="karate-summary.html"
          new_string="karate-summary-${{ github.event.pull_request.number }}.html"
          find "$folder_path" -type f -exec sed -i "s/$old_string/$new_string/g" {} \;
          mv ./doc-${{ github.event.pull_request.number }}/karate-summary.html ./doc-${{ github.event.pull_request.number }}/karate-summary-${{ github.event.pull_request.number }}.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './doc-${{ github.event.pull_request.number }}'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1


  review-dependabot-pr:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1.3.1
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Approve patch and minor updates
        if: ${{steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch' || steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor'}}
        run: gh pr review $PR_URL --approve -b "I'm **approving** this pull request because **it includes a patch or minor update**"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Approve major updates of development dependencies
        if: ${{steps.dependabot-metadata.outputs.update-type == 'version-update:semver-major' && steps.dependabot-metadata.outputs.dependency-type == 'direct:development'}}
        run: gh pr review $PR_URL --approve -b "I'm **approving** this pull request because **it includes a major update of a dependency used only in development**"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Comment on major updates of non-development dependencies
        if: ${{steps.dependabot-metadata.outputs.update-type == 'version-update:semver-major' && steps.dependabot-metadata.outputs.dependency-type == 'direct:production'}}
        run: |
          gh pr comment $PR_URL --body "I'm **not approving** this PR because **it includes a major update of a dependency used in production**"
#          gh pr edit $PR_URL --add-label "requires-manual-qa"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
