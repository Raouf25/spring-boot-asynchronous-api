<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-parent</artifactId>
			<version>3.2.1</version>
	</parent>

	<groupId>com.mak</groupId>
	<artifactId>spring-boot-asynchronous-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>spring-boot-asynchronous-api</name>
	<description>Reactive programming is a programming style that focuses on the flow of data within a system. It allows for improved scalability and performance by allowing the system to process data as it comes in, rather than waiting for all of the data to arrive before beginning processing. Additionally, reactive programming can simplify the code required to build a system by focusing on the flow of data rather than the control flow of a program. This can make the code easier to understand and maintain.</description>

	<properties>
		<java.version>21</java.version>

		<!-- SonarCloud -->
		<sonar.organization>raouf25-github</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.coverage.jacoco.xmlReportPaths> ${project.basedir}/report-aggregate/target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
	</properties>

	<modules>
		<module>app</module>
		<module>nrt</module>
		<module>loading</module>
	</modules>

</project>
